@import 'https://fonts.googleapis.com/css?family=Playfair+Display:400,700i,900i';

$lightblue: #3be8ff;
$blue: #251170;

*{
  box-sizing: border-box;
}
$container-size: 30vw;
$squares-count: 5;

$square-size: $container-size/$squares-count;
$lines-size: $square-size/$squares-count;
$squares-padding: 0;

$animation-time: 3s;
$animation-curve: cubic-bezier(1,.5,.25,.5);

.page-welcome-text{
    position: relative;
	font-family: 'Playfair Display', serif;
	color: rgba(172,170,190, 1);
	font-size: 14px;
    background-color: $blue;
	overflow: hidden;
    height: 80vh;
    width: 47vw;
    z-index: -1;
}
.container-background{
    z-index: 0;
	transform: translate(-50%, -50%);
	height: $container-size;
	width: $container-size;
	position: absolute;
	left: 26vw;
	top: 45vh;
	> .row {
		position: relative;
		float: left;
		width: 100%;
		clear: both;
		> .loader {
			position: relative;
			height: $square-size;
			width: $square-size;
			float: left;
			> .lines {
				bottom: $squares-padding;
				right: $squares-padding;
				left: $squares-padding;
				top: $squares-padding;
				position: absolute;
				> span {
					animation: shift-background $animation-time infinite $animation-curve;
					background-color: white;
					position: absolute;
					width: $lines-size;
					height: 3px;
					&::before {
						background-color: inherit;
						height: $lines-size;
						position: absolute;
						content: "";
						width: 3px;
					}
					&:nth-child(1),
					&:nth-child(4),
					&:nth-child(1)::before,
					&:nth-child(4)::before {
						left: 0;
					}
					&:nth-child(2),
					&:nth-child(3),
					&:nth-child(2)::before,
					&:nth-child(3)::before {
						right: 0;
					}
					&:nth-child(1),
					&:nth-child(2),
					&:nth-child(1)::before,
					&:nth-child(2)::before {
						top: 0;
					}
					&:nth-child(3),
					&:nth-child(4),
					&:nth-child(3)::before,
					&:nth-child(4)::before {
						bottom: 0;
					}
				}
			}
		}
		&:nth-child(even) > .loader:nth-child(even) > .lines {
			animation: rotate-right $animation-time infinite $animation-curve;
		}
		&:nth-child(even) > .loader:nth-child(odd) > .lines {
			animation: rotate-left $animation-time infinite $animation-curve;
		}
		&:nth-child(odd) > .loader:nth-child(even) > .lines {
			animation: rotate-left $animation-time infinite $animation-curve;
		}
		&:nth-child(odd) > .loader:nth-child(odd) > .lines {
			animation: rotate-right $animation-time infinite $animation-curve;
		}
	}
}



.container-welcome-text {
    position: relative;
	top:25vh;
	right:8vw;
    z-index: 1;
}
.line-text{
	display: flex;
	justify-content: center;
	align-items: center;
	color: #fff;
    font-family: Poppins;
    font-size: 22px;
	> h4::after {
		content: "";
		position: relative;
		right:6.5vw;
		bottom:1.5vh;
		height: 4px;
		width: 120px;
		display: block;
		background-color: #000;
		
	}
}

.glitch-box {
	position:relative;
	bottom:5rem;
	left:1rem;
	color: #fff;
	font-size: 4em;
	padding: 0;
	animation: glitch-skew 1s infinite linear alternate-reverse;
    
    text-shadow: -2px 0 #ff00c1, 2px 2px #ff00c1;
	&::before {
		@include glitchCopy;
		left: 2px;
		clip: rect(44px, 450px, 56px, 0);
		animation: glitch-anim 5s infinite linear alternate-reverse;
		
	  }
	
	  &::after {
		@include glitchCopy;
		left: -2px;
		clip: rect(44px, 450px, 56px, 0);
		animation: glitch-anim2 5s infinite linear alternate-reverse;
	  }
}

@keyframes rotate-right {
    0% { transform:translate(-50%, -50%) rotate(0deg); }
    25% { transform:translate(-50%, -50%) rotate(45deg); }
    50% { transform:translate(-50%, -50%) rotate(90deg); }
    75% { transform:translate(-50%, -50%) rotate(135deg); }
    100% { transform:translate(-50%, -50%) rotate(180deg); }
}

@keyframes rotate-left {
    0% { transform:translate(-50%, -50%) rotate(0deg); }
    25% { transform:translate(-50%, -50%) rotate(-45deg); }
    50% { transform:translate(-50%, -50%) rotate(-90deg); }
    75% { transform:translate(-50%, -50%) rotate(-135deg); }
    100% { transform:translate(-50%, -50%) rotate(-180deg); }
}

@keyframes shift-background {
    0%, 100% { background-color: hsla(random(360), 50%, 50%, 100*random(100)*.1); }
    25% { background-color: hsla(random(360), 50%, 50%, 100*random(100)*.1); }
    50% { background-color: hsla(random(360), 50%, 50%, 100*random(100)*.1); }
    75% { background-color: hsla(random(360), 50%, 50%, 100*random(100)*.1); }
}

@keyframes glitch-anim {
	$steps: 20;
	@for $i from 0 to $steps {
		#{percentage($i*(1/$steps))} {
		clip: rect(random(100) + px, 9999px, random(100) + px, 0);
		transform: skew((random(100) / 100) + deg);
		}
	}
}

@keyframes glitch-anim2 {
	$steps: 20;
	@for $i from 0 to $steps {
		#{percentage($i*(1/$steps))} {
		clip: rect(random(100) + px, 9999px, random(100) + px, 0);
		transform: skew((random(100) / 100) + deg);
		}
	}
}

}